package jvm.classFileFormat;

/**
 *	使用 method_info 来描述 method:
 *
 * 	method_info {
		u2 				access_flags;
		u2 				name_index;
		u2 				descriptor_index;
		u2 				attributes_count;
		attribute_info 	attributes[attributes_count];
	}
 *~~~~~~~~~~~~~~~~~~~~~~~~
 *~	<item> access_flags  ~
 *~~~~~~~~~~~~~~~~~~~~~~~~
 *	它的值是一个flag的掩码(mask)，用于指示这个 method 的访问权限和属性。
 *	列出每一个flag:
 *  ----------------------------------------------------------------------
	ACC_PUBLIC(0x0001)			Declared public; may be accessed from outside its package.
	ACC_PRIVATE(0x0002) 		Declared private; accessible only within the defining class.
	ACC_PROTECTED(0x0004) 		Declared protected; may be accessed within subclasses.
	ACC_STATIC(0x0008) 			Declared static.
	ACC_FINAL(0x0010)			Declared final; must not be overridden (§5.4.5).
	ACC_SYNCHRONIZED(0x0020) 	Declared synchronized; invocation is wrapped by a monitor use.
	ACC_BRIDGE(0x0040) 			A bridge method, generated by the compiler.
	ACC_VARARGS(0x0080) 		Declared with variable number of arguments.
	ACC_NATIVE(0x0100) 			Declared native; implemented in a language other than Java.
	ACC_ABSTRACT(0x0400) 		Declared abstract; no implementation is provided.
	ACC_STRICT(0x0800) 			Declared strictfp; floating-point mode is FPstrict.
	ACC_SYNTHETIC(0x1000) 		Declared synthetic; not present in the source code.
 *  ----------------------------------------------------------------------
 *	<flag> ACC_VARARGS
 *	指出这个method接受不定（数目）参数
 *	
 *	【注意】
 *	<1> 一个method最多只会设置 ACC_PUBLIC ， ACC_PRIVATE ， ACC_PROTECTED的一个。
 *	<2> 如果设置了 ACC_ABSTRACT ， 则不能设置 ACC_FINAL、 ACC_NATIVE、 ACC_PRIVATE、
 *		ACC_STATIC、 ACC_STRICT、 ACC_SYNCHRONIZED。
 *	<3> 所有的接口method必须设置 ACC_ABSTRACT ， ACC_PUBLIC
 *
 *
 *~~~~~~~~~~~~~~~~~~~~~~~~
 *~  <item> name_index	 ~
 *~~~~~~~~~~~~~~~~~~~~~~~~
 *	必须是一个有效的指向constant_pool中 entry的index，这个entry必须是一个
 *	CONSTANT_Utf8_info 的数据结构，它表示一个这个method 的名字。
 *
 **~~~~~~~~~~~~~~~~~~~~~~~~~
 *~<item> descriptor_index~
 *~~~~~~~~~~~~~~~~~~~~~~~~~
 *	必须是一个有效的指向constant_pool中 entry的index，这个entry必须是一个
 *	CONSTANT_Utf8_info 的数据结构，它表示一个这个method 的descriptor。
 *
 * *~~~~~~~~~~~~~~~~~~~~~~~~~~
 *~ <item> attributes_count~
 *~~~~~~~~~~~~~~~~~~~~~~~~~~
 *	它的值指出这个method的additional attributes的数目。
 *
 *~~~~~~~~~~~~~~~~~~~~~~~
 *~ <item> attributes[] ~
 *~~~~~~~~~~~~~~~~~~~~~~~
 *	它的每一项元素都是一个 attribute 结构，一个 method 可以有多个attribute与之关联。
 */
public class Methods {

}
